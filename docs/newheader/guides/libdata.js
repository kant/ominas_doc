/* Index used for searching */
/*
   Fields used:
     url, name, type, filename, authors, routine name, comments, parameters,
     categories, and attributes
*/
title = "OMINAS Documentation";
subtitle = "Generated by IDLdoc";
libdata = new Array();
libdataItem = 0;



libdata[libdataItem++] = new Array("./install_guide.html", "install_guide.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "install_guide.pro", "", "", "	User Installation Guide  	This guide will cover the installation of OMINAS and common issues with 	configuration, as well as present some common errors and possible 	solutions. Please see the section entitled Troubleshooting for more 	information regarding installation issues with OMINAS.  	Requirements  	Currently OMINAS requires IDL 8.2.3 or above, and a bash shell, on Linux or 	Mac OS.  	To process images from a particular mission, that mission's kernels will 	need to be available. The OMINAS installer can automatically download sets of 	kernels for several missions (Cassini, Galileo, Voyager, Dawn).  	OMINAS makes use of the NAIF Icy Toolkit to process SPICE kernels. The Icy 	toolkit may optionally be obtained manually from 	NAIF. However, the 	installer utility provided with OMINAS can download and compile Icy 	automatically. Installation of Icy is somewhat platform-dependent, so 	troubleshooting information can be found in Troubleshooting.  	Procedure  	1. Please ensure that OMINAS has been properly downloaded from the 	Github repository by entering 	the following command at the terminal: <span class= code-output > git clone https://github.com/ppenteado/ominas</span> 	A local copy of the OMINAS source will be cloned automatically.  	2. Configuration of OMINAS should be performed using the configuration 	script, configure.sh, which is located in the top-level ominas directory. 	This script can be run from the command line with: <span class= code-output > source configure.sh</span> 	3. A prompt will appear asking which packages should be installed. The 	user should type the numbers of the desired packages separated by spaces. 	We recomend, at a minimum, setting up packages 1, 2 and 3 (OMINAS Core, Demo and Icy). 	To automatically download and setup all the packages, use the all option.  	4. When setting up an individual kernel or data package (selections 4-13), 	one can either provide a path for an existing directory containing the required files, 	or tell the installer to download them.  	5. Test the install of OMINAS has been completed correctly by running the 	the following example scripts: <span class= code-output > ominas saturn_example.pro</span> <span class= code-output > ominas jupiter_example.pro</span> 	6. A successful Icy installation can be tested with the following IDL 	command from within an OMINAS IDL session: <span class= code-output > help, 'icy', /dlm</span> 	Some text on the installed version of Icy should be displayed. Additionally, 	use the following command: <span class= code-output > print, cspice_tkvrsn('TOOLKIT')</span> 	The version of Icy should be printed. If both of these functions return 	successfully, then Icy has been installed correctly.   Example installation walkthrough   From a fresh account (that never had OMINAS, Icy or any IDL libraries setup  before), for the 3 main packages (Core, Demo and Icy): <span class= code-output > ;[ominas_test_8@cmp ~]$ git clone https://github.com/ppenteado/ominas.git</span> <span class= code-output > ;Cloning into 'ominas'...</span> <span class= code-output > ;Username for 'https://github.com': ppenteado</span> <span class= code-output > ;Password for 'https://ppenteado@github.com':</span> <span class= code-output > ;remote: Counting objects: 13377, done.</span> <span class= code-output > ;remote: Compressing objects: 100% (85/85), done.</span> <span class= code-output > ;remote: Total 13377 (delta 51), reused 71 (delta 34), pack-reused 13258</span> <span class= code-output > ;Receiving objects: 100% (13377/13377), 200.48 MiB | 8.10 MiB/s, done.</span> <span class= code-output > ;Resolving deltas: 100% (7628/7628), done.</span> <span class= code-output > ;Checking connectivity... done.</span> <span class= code-output > ;Checking out files: 100% (3479/3479), done.</span>  At this point, a copy of OMINAS will be in a newly-created directory called  ominas, under the current directory. Note that if a non-empty ominas directory  was already present, git would notice it and refuse to download OMINAS into that  directory.    Now, getting into the ominas directory and running the installer: <span class= code-output >;[ominas_test_8@cmp ~]$ cd ominas/</span> <span class= code-output >;[ominas_test_8@cmp ominas]$ source configure.sh</span> <span class= code-output >;Detecting .bash_profile...</span> <span class= code-output >;.bash_profile detected!</span> <span class= code-output >;Detecting .bashrc...</span> <span class= code-output >;.bashrc detected!</span> <span class= code-output >;Using IDL at /usr/local/bin/idl</span> <span class= code-output >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output >;Installation number: XXXXXX.</span> <span class= code-output >;Licensed for use by: XXXXXX</span> <span class= code-output >;</span> <span class= code-output >;Creating ~/.ominas directory</span> <span class= code-output >;Creating ~/ominas_data directory</span> <span class= code-output >;The setup will guide you through the installation of OMINAS</span> <span class= code-output >;OMINAS files located in /home/ominas_test_8/ominas</span> <span class= code-output >;</span> <span class= code-output >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output >;Installation number: XXXXX.</span> <span class= code-output >;Licensed for use by: XXXXX</span> <span class= code-output >;</span> <span class= code-output >;% Compiled module: OMINAS_ICY_TEST.</span> <span class= code-output >;Icy: Icy not found</span> <span class= code-output >;Current OMINAS configuration settings</span> <span class= code-output >;Required:</span> <span class= code-output >;1) OMINAS Core  . . . . . . . . . . . . .  NOT CONFIGURED</span> <span class= code-output >;Contains the OMINAS code. If you select only one</span> <span class= code-output >;of the other packages, this will be included.</span> <span class= code-output >;Optional packages:</span> <span class= code-output >;2) Demo package . . . . . . . . . . . . .  NOT CONFIGURED</span> <span class= code-output >;Contains the demo scripts and the data required</span> <span class= code-output >;to run then.</span> <span class= code-output >;These files are always present (in ominas/demo),</span> <span class= code-output >;this option is to set up the environment so that</span> <span class= code-output >;the demos can be run.</span> <span class= code-output >;3) SPICE Icy  . . . . . . . . . . . . . .  NOT CONFIGURED</span> <span class= code-output >;Library maintained by JPL's NAIF (Navigation and Ancillary</span> <span class= code-output >;Information Facility, https://naif.jpl.nasa.gov/naif/toolkit.html,</span> <span class= code-output >;required to use spacecraft / planetary kernel files.</span> <span class= code-output >;</span> <span class= code-output >;Mission Packages:</span> <span class= code-output >;Kernels used for each mission's position and</span> <span class= code-output >;pointing data. If you do not already have them,</span> <span class= code-output >;an option to download them from PDS will be provided.</span> <span class= code-output >;If you already have them, you will need to provide</span> <span class= code-output >;the path to your kernel files.</span> <span class= code-output >;Note: the NAIF Generic Kernels (one of the optional</span> <span class= code-output >;data packages) are not required for the missions, they</span> <span class= code-output >;already contain a copy the subset of the generic kernel</span> <span class= code-output >;files they need.</span> <span class= code-output >;4) Cassini . . . . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;Subsetted, about 16 GB as of Dec/2016</span> <span class= code-output >;5) Galileo (GLL) . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 833 MB as of Dec/2016</span> <span class= code-output >;6) Voyager . . . . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 163 MB as of Dec/2016</span> <span class= code-output >;7) Dawn  . . . . . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;Subsetted, about 8 GB as of Jan/2017</span> <span class= code-output >;Data:</span> <span class= code-output >;8) NAIF Generic Kernels . . . . . . . . .  NOT CONFIGURED</span> <span class= code-output >;About 22 GB as of Dec/2016</span> <span class= code-output >;9) SEDR image data . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;10) TYCHO2 star catalog . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 161 MB download, 665 MB unpacked</span> <span class= code-output >;11) SAO star catalog . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 19 MB download, 70 MB unpacked</span> <span class= code-output >;12) GSC star catalog . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;13) UCAC4 star catalog . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 8.5 GB download</span> <span class= code-output >;For more information, see</span> <span class= code-output >;https://ppenteado.github.io/ominas_doc/demo/install_guide.html</span> <span class= code-output >;Modify Current OMINAS configuration (Exit/Auto/Uninstall 1 2 ...)?  1 2 3</span> <span class= code-output >;Settiing OMINAS Core...</span> <span class= code-output >;OMINAS requires the NAIF Icy toolkit to process SPICE kernels.</span> <span class= code-output >;Would you like to install Icy from the internet now? [y]</span> <span class= code-output >;http://naif.jpl.nasa.gov/pub/naif/toolkit//IDL/PC_Linux_GCC_IDL8.x_64bit/packages/icy.tar.Z ~/ominas_data/icy.tar.Z</span> <span class= code-output >;http://naif.jpl.nasa.gov/pub/naif/toolkit//IDL/PC_Linux_GCC_IDL8.x_64bit/packages/icy.tar.Z --localdir=/home/ominas_test_8/ominas_data/</span> <span class= code-output >;</span> <span class= code-output >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output >;Installation number: XXXXXX.</span> <span class= code-output >;Licensed for use by: XXXXXX</span> <span class= code-output >;</span> <span class= code-output >;% Compiled module: PP_WGETCL.</span> <span class= code-output >;% Compiled module: PP_COMMAND_LINE_ARGS_PARSE.</span> <span class= code-output >;% Loaded DLM: URL.</span> <span class= code-output >;% Compiled module: PP_WGET__DEFINE.</span> <span class= code-output >;util/downloader/ca-bundle.crt</span> <span class= code-output >;% Compiled module: PARSE_URL.</span> <span class= code-output >;downloading http://naif.jpl.nasa.gov/pub/naif/toolkit//IDL/PC_Linux_GCC_IDL8.x_64bit/packages/icy.tar.Z</span> <span class= code-output >;% Compiled module: PP_READABLESIZE.</span> <span class= code-output >;Content Length:  276.00000 B</span> <span class= code-output >;% Compiled module: PP_PARSE_DATE.</span> <span class= code-output >;% Compiled module: JULDAY.</span> <span class= code-output >;Content Length:  43.669736 MB</span> <span class= code-output >;% Compiled module: CALDAT.</span> <span class= code-output >;Extracting Icy source files...</span> <span class= code-output >;Compiling Icy...</span> <span class= code-output >;Icy compiled. Log is at ~/.ominas/icy_make.log</span> <span class= code-output >;writing /home/ominas_test_8/.ominas/ominas_setup.sh</span> <span class= code-output >;‘/home/ominas_test_8/.ominas/ominas_setup.sh’ -&gt; ‘/home/ominas_test_8/.ominas/ominas_setup_old.sh’</span> <span class= code-output >;</span> <span class= code-output >;</span> <span class= code-output >;</span> <span class= code-output >;</span> <span class= code-output >;</span> <span class= code-output >;</span> <span class= code-output >;done with writing /home/ominas_test_8/.ominas/ominas_setup.sh</span> <span class= code-output >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output >;Installation number: XXXXXX.</span> <span class= code-output >;Licensed for use by: XXXXXX</span> <span class= code-output >;</span> <span class= code-output >;% Compiled module: OMINAS_PATHS_ADD.</span> <span class= code-output >;Checking to see if IDL paths need to be changed...</span> <span class= code-output >;% Compiled module: IDLASTRO_DOWNLOAD.</span> <span class= code-output >;% Compiled module: ROUTINE_EXISTS.</span> <span class= code-output >;There are missing IDLAstro routines.</span> <span class= code-output >;Auto installing</span> <span class= code-output >;git clone https://github.com/wlandsman/IDLAstro.git /home/ominas_test_8/ominas_data/idlastro</span> <span class= code-output >;Cloning into '/home/ominas_test_8/ominas_data/idlastro'...</span> <span class= code-output >;remote: Counting objects: 1400, done.</span> <span class= code-output >;remote: Compressing objects: 100% (7/7), done.</span> <span class= code-output >;remote: Total 1400 (delta 1), reused 3 (delta 1), pack-reused 1392</span> <span class= code-output >;Receiving objects: 100% (1400/1400), 11.63 MiB | 4.85 MiB/s, done.</span> <span class= code-output >;Resolving deltas: 100% (556/556), done.</span> <span class= code-output >;Checking connectivity... done.</span> <span class= code-output >;IDLAstro path set in preferences:  &lt;IDL_DEFAULT&gt;:+/home/ominas_test_8/ominas_data/idlastro/pro</span> <span class= code-output >;OMINAS paths set in IDL preferences</span> <span class= code-output >;Icy path set in IDL preferences</span> <span class= code-output >;OMINAS aliase set in /home/ominas_test_8/.bashrc.</span> <span class= code-output >;OMINAS aliase set in /home/ominas_test_8/.bash_profile.</span> <span class= code-output >;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output >;Installation number: 5502667.</span> <span class= code-output >;Licensed for use by: NASA - Jet Propulsion Laboratory</span> <span class= code-output >;</span> <span class= code-output >;% Compiled module: OMINAS_ICY_TEST.</span> <span class= code-output >;% Loaded DLM: ICY.</span> <span class= code-output >;Icy: /home/ominas_test_8/ominas_data/icy/lib/icy.so</span> <span class= code-output >;Current OMINAS configuration settings</span> <span class= code-output >;Required:</span> <span class= code-output >;1) OMINAS Core  . . . . . . . . . . . . .  CONFIGURED</span> <span class= code-output >;Contains the OMINAS code. If you select only one</span> <span class= code-output >;of the other packages, this will be included.</span> <span class= code-output >;Optional packages:</span> <span class= code-output >;2) Demo package . . . . . . . . . . . . .  CONFIGURED</span> <span class= code-output >;Contains the demo scripts and the data required</span> <span class= code-output >;to run then.</span> <span class= code-output >;These files are always present (in ominas/demo),</span> <span class= code-output >;this option is to set up the environment so that</span> <span class= code-output >;the demos can be run.</span> <span class= code-output >;3) SPICE Icy  . . . . . . . . . . . . . .  CONFIGURED</span> <span class= code-output >;Library maintained by JPL's NAIF (Navigation and Ancillary</span> <span class= code-output >;Information Facility, https://naif.jpl.nasa.gov/naif/toolkit.html,</span> <span class= code-output >;required to use spacecraft / planetary kernel files.</span> <span class= code-output >;</span> <span class= code-output >;Mission Packages:</span> <span class= code-output >;Kernels used for each mission's position and</span> <span class= code-output >;pointing data. If you do not already have them,</span> <span class= code-output >;an option to download them from PDS will be provided.</span> <span class= code-output >;If you already have them, you will need to provide</span> <span class= code-output >;the path to your kernel files.</span> <span class= code-output >;Note: the NAIF Generic Kernels (one of the optional</span> <span class= code-output >;data packages) are not required for the missions, they</span> <span class= code-output >;already contain a copy the subset of the generic kernel</span> <span class= code-output >;files they need.</span> <span class= code-output >;4) Cassini . . . . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;Subsetted, about 16 GB as of Dec/2016</span> <span class= code-output >;5) Galileo (GLL) . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 833 MB as of Dec/2016</span> <span class= code-output >;6) Voyager . . . . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 163 MB as of Dec/2016</span> <span class= code-output >;7) Dawn  . . . . . . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;Subsetted, about 8 GB as of Jan/2017</span> <span class= code-output >;Data:</span> <span class= code-output >;8) NAIF Generic Kernels . . . . . . . . .  NOT CONFIGURED</span> <span class= code-output >;About 22 GB as of Dec/2016</span> <span class= code-output >;9) SEDR image data . . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;10) TYCHO2 star catalog . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 161 MB download, 665 MB unpacked</span> <span class= code-output >;11) SAO star catalog . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 19 MB download, 70 MB unpacked</span> <span class= code-output >;12) GSC star catalog . . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;13) UCAC4 star catalog . . . . . . . . . . NOT CONFIGURED</span> <span class= code-output >;About 8.5 GB download</span> <span class= code-output >;For more information, see</span> <span class= code-output >;https://ppenteado.github.io/ominas_doc/demo/install_guide.html</span> <span class= code-output >;Modify Current OMINAS configuration (Exit/Auto/Uninstall 1 2 ...)?  e</span> <span class= code-output >;Setup has completed. It is recommended to restart your terminal session before using OMINAS.</span> <span class= code-output >;You may want to try some of the tutorials at https://ppenteado.github.io/ominas_doc/demo/</span>   At this point, one can run a few tests of the enviroment: <span class= code-output > ;[ominas_test_8@cmp ominas]$ which ominas</span> <span class= code-output > ;alias ominas='/home/ominas_test_8/.ominas/ominas'</span> <span class= code-output > ;~/.ominas/ominas</span> <span class= code-output > ;[ominas_test_8@cmp ominas]$ which ominasde</span> <span class= code-output > ;alias ominasde='/home/ominas_test_8/.ominas/ominasde'</span> <span class= code-output > ;~/.ominas/ominasde</span>  Which shows both ominas and ominasde are defined. Use ominas to start and IDL  session in which to use OMINAS, and ominasde to start an IDL DE session in  which to use OMINAS.   Now, to check on the ominas_setup file, which sets the environment for the OMINAS  core and all currently set packages (in this example, only Core, Demo and Icy are set): <span class= code-output > ;[ominas_test_8@cmp ominas]$ cat ~/.ominas/ominas_setup.sh</span> <span class= code-output > ;#!/usr/bin/env bash</span> <span class= code-output > ;alias ominas=~/.ominas/ominas</span> <span class= code-output > ;alias ominasde=~/.ominas/ominasde</span> <span class= code-output > ;export OMINAS_DIR=/home/ominas_test_8/ominas</span> <span class= code-output > ;export DFLAG=true</span> <span class= code-output > ;source /home/ominas_test_8/ominas/config/ominas_env_def.sh</span> <span class= code-output > ;unset NV_Generic_kernels_DATA</span> <span class= code-output > ;unset NV_SEDR_DATA</span> <span class= code-output > ;unset NV_TYCHO2_DATA</span> <span class= code-output > ;unset NV_SAO_DATA</span> <span class= code-output > ;unset NV_GSC_DATA</span> <span class= code-output > ;unset NV_UCAC4_DATA</span>  Now, to check that the right environment is see from an OMINAS session: <span class= code-output > ;[ominas_test_8@cmp ominas]$ ominas -e 'spawn, env | grep NV '</span> <span class= code-output > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output > ;Installation number: XXXXX.</span> <span class= code-output > ;Licensed for use by: XXXXX</span> <span class= code-output > ;</span> <span class= code-output > ;NV_TRANSLATORS=/home/ominas_test_8/ominas/config/tab/translators.tab:/home/ominas_test_8/ominas/demo/data/translators.tab</span> <span class= code-output > ;NV_CONFIG=/home/ominas_test_8/ominas/config</span> <span class= code-output > ;NV_IO=/home/ominas_test_8/ominas/config/tab/io.tab</span> <span class= code-output > ;NV_SPICE=/home/ominas_test_8/ominas/config/spice</span> <span class= code-output > ;NV_ORBIT_DATA=/home/ominas_test_8/ominas/config/orb/</span> <span class= code-output > ;NV_ARRAY_DATA=/home/ominas_test_8/ominas/config/arr/dat/</span> <span class= code-output > ;NV_TRANSFORMS=/home/ominas_test_8/ominas/config/tab/transforms.tab:/home/ominas_test_8/ominas/demo/data/transforms.tab</span> <span class= code-output > ;NV_STATION_DATA=/home/ominas_test_8/ominas/config/stn/</span> <span class= code-output > ;NV_RING_DATA=/home/ominas_test_8/ominas/config/rings/</span> <span class= code-output > ;NV_FTP_DETECT=/home/ominas_test_8/ominas/config/tab/filetype_detectors.tab</span> <span class= code-output > ;NV_SPICE_KER=::/home/ominas_test_8/ominas/demo/data</span> <span class= code-output > ;NV_INS_DETECT=/home/ominas_test_8/ominas/config/tab/instrument_detectors.tab:/home/ominas_test_8/ominas/demo/data/instrument_detectors.tab</span>  Now, to check that the OMINAS paths show up inside an OMINAS IDL session: <span class= code-output > ;[ominas_test_8@cmp ominas]$ ominas -e 'print,pref_get( IDL_PATH )'</span> <span class= code-output > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output > ;Installation number: XXXXX.</span> <span class= code-output > ;Licensed for use by: XXXXX</span> <span class= code-output > ;</span> <span class= code-output > ;&lt;IDL_DEFAULT&gt;:+/home/ominas_test_8/ominas_data/idlastro/pro:+/home/ominas_test_8/ominas_data/icy/lib:+/home/ominas_test_8/ominas:+/home/ominas_test_8/ominas/util/xidl</span> <span class= code-output > ;[ominas_test_8@cmp ominas]$ ominas -e 'print,pref_get( IDL_DLM_PATH )'</span> <span class= code-output > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output > ;Installation number: XXXXX.</span> <span class= code-output > ;Licensed for use by: XXXXX</span> <span class= code-output > ;</span> <span class= code-output > ;&lt;IDL_DEFAULT&gt;:+/home/ominas_test_8/ominas_data/icy/lib</span>  With this environment, one can run some demo scripts, such as: <span class= code-output > ;ominas saturn_example</span> <span class= code-output > ;ominas jupiter_example</span>     Testing the environment with ominas_env_info         OMINAS includes a utilty script that prints out the most commonly relevant about your OMINAS environment, which can be useful for debugging        (both for yourself, and when you send us questions). It can be run by calling ominas_env_info, from an ominas/ominasde session. If an argument        is provided, it will be the filename where the output will be saved into (as opposed to printing it to the console). One example: <span class= code-output > ;[user@cmp ~]$ ominas</span> <span class= code-output > ;IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.</span> <span class= code-output > ;Installation number: XXXXXX.</span> <span class= code-output > ;Licensed for use by: XXXXXX</span> <span class= code-output > ;</span> <span class= code-output > ;IDL&gt; ominas_env_info,'~/ominas_env_info.txt'</span>        Which produces: <span class= code-output > ;OMINAS variables:</span> <span class= code-output > ;OMINAS_RC=/home/user/.ominas</span> <span class= code-output > ;OMINAS_DEMO=/home/user/ominas/demo</span> <span class= code-output > ;OMINAS_DIR=/home/user/ominas</span> <span class= code-output > ;OMINAS_DATA=/home/user/ominas_data</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;NV variables:</span> <span class= code-output > ;NV_TRANSLATORS=/home/user/ominas/config/tab/translators.tab:/home/user/ominas/demo/data/translators.tab</span> <span class= code-output > ;NV_CONFIG=/home/user/ominas/config</span> <span class= code-output > ;NV_IO=/home/user/ominas/config/tab/io.tab</span> <span class= code-output > ;NV_SPICE=/home/user/ominas/config/spice</span> <span class= code-output > ;NV_ORBIT_DATA=/home/user/ominas/config/orb/</span> <span class= code-output > ;NV_ARRAY_DATA=/home/user/ominas/config/arr/dat/</span> <span class= code-output > ;NV_TRANSFORMS=/home/user/ominas/config/tab/transforms.tab:/home/user/ominas/demo/data/transforms.tab</span> <span class= code-output > ;NV_STATION_DATA=/home/user/ominas/config/stn/</span> <span class= code-output > ;NV_RING_DATA=/home/user/ominas/config/rings/</span> <span class= code-output > ;NV_FTP_DETECT=/home/user/ominas/config/tab/filetype_detectors.tab</span> <span class= code-output > ;NV_SPICE_KER=::/home/user/ominas/demo/data</span> <span class= code-output > ;NV_INS_DETECT=/home/user/ominas/config/tab/instrument_detectors.tab:/home/user/ominas/demo/data/instrument_detectors.tab</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;ominas_setup.sh:</span> <span class= code-output > ;#!/usr/bin/env bash</span> <span class= code-output > ;alias ominas=~/.ominas/ominas</span> <span class= code-output > ;alias ominasde=~/.ominas/ominasde</span> <span class= code-output > ;export OMINAS_DIR=/home/user/ominas</span> <span class= code-output > ;export OMINAS_DATA=/home/user/ominas_data</span> <span class= code-output > ;export OMINAS_RC=/home/user/.ominas</span> <span class= code-output > ;export DFLAG=true</span> <span class= code-output > ;source /home/user/ominas/config/ominas_env_def.sh</span> <span class= code-output > ;unset NV_Generic_kernels_DATA</span> <span class= code-output > ;unset NV_SEDR_DATA</span> <span class= code-output > ;unset NV_TYCHO2_DATA</span> <span class= code-output > ;unset NV_SAO_DATA</span> <span class= code-output > ;unset NV_GSC_DATA</span> <span class= code-output > ;unset NV_UCAC4_DATA</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;</span> <span class= code-output > ;IDL:</span> <span class= code-output > ;** Structure !VERSION, 8 tags, length=104, data length=100:</span> <span class= code-output > ;   ARCH            STRING    'x86_64'</span> <span class= code-output > ;   OS              STRING    'linux'</span> <span class= code-output > ;   OS_FAMILY       STRING    'unix'</span> <span class= code-output > ;   OS_NAME         STRING    'linux'</span> <span class= code-output > ;   RELEASE         STRING    '8.5.1'</span> <span class= code-output > ;   BUILD_DATE      STRING    'Nov 14 2015'</span> <span class= code-output > ;   MEMORY_BITS     INT             64</span> <span class= code-output > ;   FILE_OFFSET_BITS</span> <span class= code-output > ;                   INT             64</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;environment IDL_PATH</span> <span class= code-output > ;</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;environment IDL_DLM_PATH</span> <span class= code-output > ;</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;preferences IDL_PATH</span> <span class= code-output > ;&lt;IDL_DEFAULT&gt;:+/home/user/ominas_data/idlastro/pro:+/home/user/ominas:+/home/user/ominas/util/xidl:+/home/user/ominas_data/icy/lib</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;preferences IDL_DLM_PATH</span> <span class= code-output > ;&lt;IDL_DEFAULT&gt;:+/home/user/ominas_data/icy/lib</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;</span> <span class= code-output > ;Icy:</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;** ICY - IDL/CSPICE interface from JPL/NAIF (not loaded)</span> <span class= code-output > ;    Version: 1.8.0, Build Date: 05-JAN-2017, Source: ed.wright@jpl.nasa.gov</span> <span class= code-output > ;    Path: /home/user/ominas_data/icy/lib/icy.so</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;CSPICE_N0066</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;0 loaded kernels:</span> <span class= code-output > ;--------------------------------------------------------------------------------</span> <span class= code-output > ;</span> <span class= code-output > ;OMINAS repository:</span> <span class= code-output > ;On branch master</span> <span class= code-output > ;Your branch is up-to-date with 'origin/master'.</span> <span class= code-output > ;Last commit:</span> <span class= code-output > ;b373f70 Paulo Penteado Wed Jun 14 14:03:42 2017 -0700</span>   	Troubleshooting  	This section outlines several common sources of error which are due to 	OMINAS not being configured correctly.  	One of the most common configuration problems manifests as this error: <span class= code-output > % CSPICE_STR2ET: SPICE(NOLEAPSECONDS): [str2et_c-&gt;STR2ET-&gt;TTRANS] The variable that points to the leapseconds (DELTET/DELTA_AT)</span> <span class= code-output >                 could not be located in the kernel pool.  It is likely that the leapseconds kernel has not been loaded via</span> <span class= code-output >                 the routine FURNSH.</span> 	This error comes from the Icy toolkit. It specifically refers to the Leap 	Second Kernel file, however, as the lsk is usually the first kernel which 	is loaded, this error generally means that no kernels are being loaded.  	You can check which kernels have been loaded by entering the following 	IDL commands: <span class= code-output > cspice_ktotal, 'ALL', count</span> <span class= code-output > for i=0,count-1 do begin & cspice_kdata,i,'ALL',file,type,source,handle,found & print,i,file & endfor</span> 	A list will be populated with the currently loaded SPICE kernels, and 	their load order. If no kernels are loaded, then it is likely that a bad 	path was supplied to the kernel pools. Ensure that the kernel pool was 	successfully entered into the environemnt by using the  env  command at 	the terminal prompt. The kernel pool variable names follow a convention 	like so: &lt;MIS&gt;_SPICE_&lt;*K&gt;, where &lt;MIS&gt; is the abbreviated mission name, 	and &lt;*K&gt; is the type of kernel. Therefore, for Cassini, the IDL command: <span class= code-output > spawn, env | grep CAS_SPICE </span> 	will list the path to directories containing each type of Cassini kernel. 	If the variables are not present, the easiest fix might be to run the OMINAS 	installer again  	 source configure.sh  	From the ominas directory. Then, if the Cassini package shows as installed, 	select that option at the menu (4), to uninstall it. You will be presented with 	the possibility of preserving files the OMINAS installer previously downloaded, 	or deleting them. After the uninstallation is complete, you will be returned to 	the installer menu, and Cassini should show as not configured. Then select the Cassini 	option to set it up again.  	In some cases, a demo script will run and no error will appear to occur, 	but no pointing will be overlayed on the image. This error generally occurs 	due to the PCK kernels not being loaded or the CK kernels not being loaded 	in the correct order.  	When the frame kernel (FK) is not being loaded correctly for an image, 	Icy will return the following error: <span class= code-output > % CSPICE_PXFORM: SPICE(EMPTYSTRING): [pxform_c] String  from  has length zero.</span> 	If Icy is not installed, and a script is run, something similar to the 	following error may occur: <span class= code-output > % Attempt to call undefined procedure: 'CSPICE_STR2ET'.</span> 	In general, the undefined procudure may have any cspice prefix. Icy is 	either not configured correctly, or not installed. In IDL, check that 	the Icy path has been added to the IDL path as follows: <span class= code-output > path = pref_get('IDL_PATH')</span> <span class= code-output > print, path</span> <span class= code-output > dlm_path = pref_get('IDL_DLM_PATH')</span> <span class= code-output > print, dlm_path</span> 	The path variable should appear as a colon-separated list with 	&lt;IDL_DEFAULT&gt; as the first entry. Check that both Icy and OMINAS 	directories are added to the IDL_PATH, and that Icy is added to the 	IDL_DLM_PATH. If either Icy or OMINAS are not present, the best way to fix 	it probably is to get back into the OMINAS directory and run the configure.sh 	script to uninstall/install the Core, Demo or Icy packages again.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./install_guide.html#install_guide", "install_guide", 'routine in <a href="./install_guide.html">install_guide.pro</a>', "install_guide.pro", "", "install_guide", "", "", "          -1", "");
  
  

